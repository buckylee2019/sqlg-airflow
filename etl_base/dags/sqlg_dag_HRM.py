
# -*- coding: utf-8 -*-
# Author        : Jesse Wei
# LastUpdate    : 2020/11/04
# Impact        : DAG generated by SQLG
# Message       : Humanity towards others, we live by sharing. Fear can hold you prisoner, only hope can set you free.

# from __future__ import print_function
import logging
import re
import airflow
from datetime import datetime, timedelta
from airflow.operators.sensors import ExternalTaskSensor
from airflow.operators.python_operator import PythonOperator
from airflow import models
from airflow.models import Variable
#from acme.operators.dwh_operators import PostgresOperatorWithTemplatedParams

# XSLT:loop: declaration: START{
import sqlg_jobs_HRM


args = {
    "owner": "JESSEWEI",
    'start_date': airflow.utils.dates.days_ago(1),
    'provide_context': True
}	
# XSLT:loop: declaration: END}

ExternalTaskSensor.ui_color = 'white'
ExternalTaskSensor.ui_fgcolor = 'blue'

tmpl_search_path = Variable.get("sql_path")
	

# XSLT:loop: JOB_FLOW_NAME: START{
job_flow_name = "D_ODS_HRM_SRC"
if job_flow_name == 'I_SDM_CMN':
    data_stage = ['ODS']
else:
    data_stage = re.findall(r"_(.*?)_","D_ODS_HRM_SRC")
D_ODS_HRM_SRC = airflow.DAG(
    "D_ODS_HRM_SRC",
    tags=["HRM", data_stage[0]],
    schedule_interval="@daily",
    dagrun_timeout=timedelta(minutes=60),
    template_searchpath=tmpl_search_path,
    default_args=args,
    start_date=airflow.utils.dates.days_ago(1),    
    max_active_runs=1
	)
job_flow_name = "D_SDM_HRM"
if job_flow_name == 'I_SDM_CMN':
    data_stage = ['ODS']
else:
    data_stage = re.findall(r"_(.*?)_","D_SDM_HRM")
D_SDM_HRM = airflow.DAG(
    "D_SDM_HRM",
    tags=["HRM", data_stage[0]],
    schedule_interval="@daily",
    dagrun_timeout=timedelta(minutes=60),
    template_searchpath=tmpl_search_path,
    default_args=args,
    start_date=airflow.utils.dates.days_ago(1),    
    max_active_runs=1
	)
job_flow_name = "M_SDM_HRM"
if job_flow_name == 'I_SDM_CMN':
    data_stage = ['ODS']
else:
    data_stage = re.findall(r"_(.*?)_","M_SDM_HRM")
M_SDM_HRM = airflow.DAG(
    "M_SDM_HRM",
    tags=["HRM", data_stage[0]],
    schedule_interval="@monthly",
    dagrun_timeout=timedelta(minutes=60),
    template_searchpath=tmpl_search_path,
    default_args=args,
    start_date=airflow.utils.dates.days_ago(1),    
    max_active_runs=1
	)
job_flow_name = "M_DM_HRM"
if job_flow_name == 'I_SDM_CMN':
    data_stage = ['ODS']
else:
    data_stage = re.findall(r"_(.*?)_","M_DM_HRM")
M_DM_HRM = airflow.DAG(
    "M_DM_HRM",
    tags=["HRM", data_stage[0]],
    schedule_interval="@monthly",
    dagrun_timeout=timedelta(minutes=60),
    template_searchpath=tmpl_search_path,
    default_args=args,
    start_date=airflow.utils.dates.days_ago(1),    
    max_active_runs=1
	)

# XSLT:loop: JOB_FLOW_NAME: END}

# 	XSLT:loop: JOB_FLOW_NAME-and-PRE_JOB: External:START{{

my_taskid = "D_ODS_HRM_SRCxD_STG_INIT__SYS_STS_STG"
D_ODS_HRM_SRCxD_STG_INIT__SYS_STS_STG= ExternalTaskSensor(
#    schedule_interval=None,
    pool = "sensor_pool",
    task_id=my_taskid,
    external_dag_id="D_STG_INIT",
    external_task_id="SYS_STS_STG",
    mode="reschedule",
    dag=D_ODS_HRM_SRC,
#    execution_delta=None,  # Same day as today
)

my_taskid = "D_SDM_HRMxD_STG_INIT__SYS_STS_STG"
D_SDM_HRMxD_STG_INIT__SYS_STS_STG= ExternalTaskSensor(
#    schedule_interval=None,
    pool = "sensor_pool",
    task_id=my_taskid,
    external_dag_id="D_STG_INIT",
    external_task_id="SYS_STS_STG",
    mode="reschedule",
    dag=D_SDM_HRM,
#    execution_delta=None,  # Same day as today
)

my_taskid = "M_SDM_HRMxD_STG_INIT__SYS_STS_STG"
M_SDM_HRMxD_STG_INIT__SYS_STS_STG= ExternalTaskSensor(
#    schedule_interval=None,
    pool = "sensor_pool",
    task_id=my_taskid,
    external_dag_id="D_STG_INIT",
    external_task_id="SYS_STS_STG",
    mode="reschedule",
    dag=M_SDM_HRM,
#    execution_delta=None,  # Same day as today
)

my_taskid = "M_DM_HRMxD_STG_INIT__SYS_STS_STG"
M_DM_HRMxD_STG_INIT__SYS_STS_STG= ExternalTaskSensor(
#    schedule_interval=None,
    pool = "sensor_pool",
    task_id=my_taskid,
    external_dag_id="D_STG_INIT",
    external_task_id="SYS_STS_STG",
    mode="reschedule",
    dag=M_DM_HRM,
#    execution_delta=None,  # Same day as today
)
	
# 	XSLT:loop: JOB_FLOW_NAME-and-PRE_JOB: External: END}}


# XSLT:loop: JOB_FLOW_NAME: START{


# 	XSLT:loop: Rows-by-JOB_FLOW_NAME: JOB_NAME: START{{
sqlg_jobs_HRM.HR_DEGREEMSF.dag=D_ODS_HRM_SRC
D_ODS_HRM_SRCxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.HR_DEGREEMSF)
sqlg_jobs_HRM.HR_ETSMSF.dag=D_ODS_HRM_SRC
D_ODS_HRM_SRCxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.HR_ETSMSF)
sqlg_jobs_HRM.HR_JOBRANK.dag=D_ODS_HRM_SRC
D_ODS_HRM_SRCxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.HR_JOBRANK)
sqlg_jobs_HRM.HR_PEOMSF.dag=D_ODS_HRM_SRC
D_ODS_HRM_SRCxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.HR_PEOMSF)
sqlg_jobs_HRM.HR_PLACEMSF.dag=D_ODS_HRM_SRC
D_ODS_HRM_SRCxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.HR_PLACEMSF)
sqlg_jobs_HRM.HR_TYPMSF.dag=D_ODS_HRM_SRC
D_ODS_HRM_SRCxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.HR_TYPMSF)
sqlg_jobs_HRM.MV_HR_EMPMSF.dag=D_ODS_HRM_SRC
D_ODS_HRM_SRCxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.MV_HR_EMPMSF)
sqlg_jobs_HRM.MV_HR_EMPMSF_H.dag=D_ODS_HRM_SRC

sqlg_jobs_HRM.MV_HR_EMPMSF.set_downstream(sqlg_jobs_HRM.MV_HR_EMPMSF_H)
sqlg_jobs_HRM.MV_HR_EMPMSF_CN.dag=D_ODS_HRM_SRC
D_ODS_HRM_SRCxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.MV_HR_EMPMSF_CN)
sqlg_jobs_HRM.MV_HR_EMPMSF_CN_H.dag=D_ODS_HRM_SRC

sqlg_jobs_HRM.MV_HR_EMPMSF_CN.set_downstream(sqlg_jobs_HRM.MV_HR_EMPMSF_CN_H)
sqlg_jobs_HRM.MV_HR_EMPMSF_VN.dag=D_ODS_HRM_SRC
D_ODS_HRM_SRCxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.MV_HR_EMPMSF_VN)
sqlg_jobs_HRM.MV_HR_EMPMSF_VN_H.dag=D_ODS_HRM_SRC

sqlg_jobs_HRM.MV_HR_EMPMSF_VN.set_downstream(sqlg_jobs_HRM.MV_HR_EMPMSF_VN_H)
sqlg_jobs_HRM.HR_DEPMSF.dag=D_ODS_HRM_SRC
D_ODS_HRM_SRCxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.HR_DEPMSF)
sqlg_jobs_HRM.HR_DEPMSF_H.dag=D_ODS_HRM_SRC

sqlg_jobs_HRM.HR_DEPMSF.set_downstream(sqlg_jobs_HRM.HR_DEPMSF_H)
sqlg_jobs_HRM.HR_DEPMSF_CN.dag=D_ODS_HRM_SRC
D_ODS_HRM_SRCxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.HR_DEPMSF_CN)
sqlg_jobs_HRM.HR_DEPMSF_CN_H.dag=D_ODS_HRM_SRC

sqlg_jobs_HRM.HR_DEPMSF_CN.set_downstream(sqlg_jobs_HRM.HR_DEPMSF_CN_H)
sqlg_jobs_HRM.HR_DEPMSF_VN.dag=D_ODS_HRM_SRC
D_ODS_HRM_SRCxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.HR_DEPMSF_VN)
sqlg_jobs_HRM.HR_DEPMSF_VN_H.dag=D_ODS_HRM_SRC

sqlg_jobs_HRM.HR_DEPMSF_VN.set_downstream(sqlg_jobs_HRM.HR_DEPMSF_VN_H)
sqlg_jobs_HRM.PEOMSF2.dag=D_ODS_HRM_SRC
D_ODS_HRM_SRCxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.PEOMSF2)
sqlg_jobs_HRM.HR_BTYPMSF.dag=D_ODS_HRM_SRC
D_ODS_HRM_SRCxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.HR_BTYPMSF)
sqlg_jobs_HRM.HR_XXCONTRACT_NQJ.dag=D_ODS_HRM_SRC
D_ODS_HRM_SRCxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.HR_XXCONTRACT_NQJ)
sqlg_jobs_HRM.HR_LOA_HISTORY.dag=D_ODS_HRM_SRC
D_ODS_HRM_SRCxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.HR_LOA_HISTORY)
sqlg_jobs_HRM.HR_LOA_RETURN.dag=D_ODS_HRM_SRC
D_ODS_HRM_SRCxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.HR_LOA_RETURN)


# 	XSLT:loop: Rows-by-JOB_FLOW_NAME: JOB_NAME: START{{
sqlg_jobs_HRM.SDM_PERSONNEL_CATEGORY.dag=D_SDM_HRM
D_SDM_HRMxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.SDM_PERSONNEL_CATEGORY)
sqlg_jobs_HRM.SDM_SENIORITY_AT_WNC.dag=D_SDM_HRM
D_SDM_HRMxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.SDM_SENIORITY_AT_WNC)
sqlg_jobs_HRM.SDM_JOB_GRADE.dag=D_SDM_HRM
D_SDM_HRMxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.SDM_JOB_GRADE)
sqlg_jobs_HRM.SDM_JOB_FAMILY.dag=D_SDM_HRM
D_SDM_HRMxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.SDM_JOB_FAMILY)
sqlg_jobs_HRM.SDM_JOB_CATEGORY.dag=D_SDM_HRM
D_SDM_HRMxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.SDM_JOB_CATEGORY)
sqlg_jobs_HRM.SDM_WORK_PLACE.dag=D_SDM_HRM
D_SDM_HRMxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.SDM_WORK_PLACE)
sqlg_jobs_HRM.SDM_CAUSE_OF_RESIGNING.dag=D_SDM_HRM
D_SDM_HRMxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.SDM_CAUSE_OF_RESIGNING)
sqlg_jobs_HRM.SDM_EDUCATION.dag=D_SDM_HRM
D_SDM_HRMxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.SDM_EDUCATION)
sqlg_jobs_HRM.SDM_EMPLOYMENT_TYPE.dag=D_SDM_HRM
D_SDM_HRMxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.SDM_EMPLOYMENT_TYPE)
sqlg_jobs_HRM.SDM_STAFF_STATUS.dag=D_SDM_HRM
D_SDM_HRMxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.SDM_STAFF_STATUS)
sqlg_jobs_HRM.SDM_DEPARTMENT.dag=D_SDM_HRM
D_SDM_HRMxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.SDM_DEPARTMENT)
sqlg_jobs_HRM.SDM_DEPARTMENT_H.dag=D_SDM_HRM

sqlg_jobs_HRM.SDM_DEPARTMENT.set_downstream(sqlg_jobs_HRM.SDM_DEPARTMENT_H)
sqlg_jobs_HRM.SDM_EMPLOYEE.dag=D_SDM_HRM
D_SDM_HRMxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.SDM_EMPLOYEE)
sqlg_jobs_HRM.SDM_EMPLOYEE_H.dag=D_SDM_HRM

sqlg_jobs_HRM.SDM_EMPLOYEE.set_downstream(sqlg_jobs_HRM.SDM_EMPLOYEE_H)


# 	XSLT:loop: Rows-by-JOB_FLOW_NAME: JOB_NAME: START{{
sqlg_jobs_HRM.SDM_HEADCOUNT_BUDGET.dag=M_SDM_HRM
M_SDM_HRMxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.SDM_HEADCOUNT_BUDGET)
sqlg_jobs_HRM.SDM_NEWCOMERS.dag=M_SDM_HRM
M_SDM_HRMxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.SDM_NEWCOMERS)


# 	XSLT:loop: Rows-by-JOB_FLOW_NAME: JOB_NAME: START{{
sqlg_jobs_HRM.FCT_HEADCOUNT.dag=M_DM_HRM
M_DM_HRMxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.FCT_HEADCOUNT)
sqlg_jobs_HRM.FCT_HEADCOUNT_FULFILL_RATE.dag=M_DM_HRM
M_DM_HRMxD_STG_INIT__SYS_STS_STG.set_downstream(sqlg_jobs_HRM.FCT_HEADCOUNT_FULFILL_RATE)
