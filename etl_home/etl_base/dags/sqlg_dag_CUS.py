
# -*- coding: utf-8 -*-
# Author        : Jesse Wei
# LastUpdate    : 2020/11/04
# Impact        : DAG generated by SQLG
# Message       : Humanity towards others, we live by sharing. Fear can hold you prisoner, only hope can set you free.

# from __future__ import print_function
import logging
import airflow
from datetime import datetime, timedelta
from airflow.operators.sensors import ExternalTaskSensor
from airflow.operators.python_operator import PythonOperator
from airflow import models
from airflow.models import Variable
#from acme.operators.dwh_operators import PostgresOperatorWithTemplatedParams
import sqlg_jobs_CUS


args = {
    "owner": "JESSEWEI",
    'start_date': airflow.utils.dates.days_ago(1),
    'provide_context': True
}

ExternalTaskSensor.ui_color = 'white'
ExternalTaskSensor.ui_fgcolor = 'blue'

tmpl_search_path = Variable.get("sql_path")

# Flow dag    
# DB_NAME = 'DWH' 
D_ODS_CUS = airflow.DAG(
    "D_ODS_CUS",
    tags=["CUS"],
    schedule_interval="@daily",
    dagrun_timeout=timedelta(minutes=60),
    template_searchpath=tmpl_search_path,
    default_args=args,
    start_date=airflow.utils.dates.days_ago(1),    
    max_active_runs=1
	)


my_taskid = "D_STG_INITxSYS_STS_STGxD_ODS_CUS"
D_STG_INITxSYS_STS_STGxD_ODS_CUS= ExternalTaskSensor(
#    schedule_interval=None,
    task_id=my_taskid,
    external_dag_id="D_STG_INIT",
    external_task_id="SYS_STS_STG",
#    dag=D_ODS_CUS,
#    execution_delta=None,  # Same day as today
)

my_taskid = "D_STG_INITxSYS_STS_STGxD_SDM_CUS"
D_STG_INITxSYS_STS_STGxD_SDM_CUS= ExternalTaskSensor(
#    schedule_interval=None,
    task_id=my_taskid,
    external_dag_id="D_STG_INIT",
    external_task_id="SYS_STS_STG",
#    dag=D_SDM_CUS,
#    execution_delta=None,  # Same day as today
)

my_taskid = "D_STG_INITxSYS_STS_STGxD_ODS_PRD"
D_STG_INITxSYS_STS_STGxD_ODS_PRD= ExternalTaskSensor(
#    schedule_interval=None,
    task_id=my_taskid,
    external_dag_id="D_STG_INIT",
    external_task_id="SYS_STS_STG",
#    dag=D_ODS_PRD,
#    execution_delta=None,  # Same day as today
)
sqlg_jobs_CUS.HZ_CUST_ACCOUNTS.dag=D_ODS_CUS
D_STG_INITxSYS_STS_STGxD_ODS_CUS.set_downstream(sqlg_jobs_CUS.HZ_CUST_ACCOUNTS)

sqlg_jobs_CUS.HZ_PARTIES.dag=D_ODS_CUS
D_STG_INITxSYS_STS_STGxD_ODS_CUS.set_downstream(sqlg_jobs_CUS.HZ_PARTIES)

D_SDM_CUS = airflow.DAG(
    "D_SDM_CUS",
    tags=["CUS"],
    schedule_interval="@daily",
    dagrun_timeout=timedelta(minutes=60),
    template_searchpath=tmpl_search_path,
    default_args=args,
    start_date=airflow.utils.dates.days_ago(1),    
    max_active_runs=1
	)


my_taskid = "D_STG_INITxSYS_STS_STGxD_ODS_CUS"
D_STG_INITxSYS_STS_STGxD_ODS_CUS= ExternalTaskSensor(
#    schedule_interval=None,
    task_id=my_taskid,
    external_dag_id="D_STG_INIT",
    external_task_id="SYS_STS_STG",
#    dag=D_ODS_CUS,
#    execution_delta=None,  # Same day as today
)

my_taskid = "D_STG_INITxSYS_STS_STGxD_SDM_CUS"
D_STG_INITxSYS_STS_STGxD_SDM_CUS= ExternalTaskSensor(
#    schedule_interval=None,
    task_id=my_taskid,
    external_dag_id="D_STG_INIT",
    external_task_id="SYS_STS_STG",
#    dag=D_SDM_CUS,
#    execution_delta=None,  # Same day as today
)

my_taskid = "D_STG_INITxSYS_STS_STGxD_ODS_PRD"
D_STG_INITxSYS_STS_STGxD_ODS_PRD= ExternalTaskSensor(
#    schedule_interval=None,
    task_id=my_taskid,
    external_dag_id="D_STG_INIT",
    external_task_id="SYS_STS_STG",
#    dag=D_ODS_PRD,
#    execution_delta=None,  # Same day as today
)
sqlg_jobs_CUS.SDM_CUSTOMER.dag=D_SDM_CUS
D_STG_INITxSYS_STS_STGxD_SDM_CUS.set_downstream(sqlg_jobs_CUS.SDM_CUSTOMER)

D_ODS_PRD = airflow.DAG(
    "D_ODS_PRD",
    tags=["CUS"],
    schedule_interval="@daily",
    dagrun_timeout=timedelta(minutes=60),
    template_searchpath=tmpl_search_path,
    default_args=args,
    start_date=airflow.utils.dates.days_ago(1),    
    max_active_runs=1
	)


my_taskid = "D_STG_INITxSYS_STS_STGxD_ODS_CUS"
D_STG_INITxSYS_STS_STGxD_ODS_CUS= ExternalTaskSensor(
#    schedule_interval=None,
    task_id=my_taskid,
    external_dag_id="D_STG_INIT",
    external_task_id="SYS_STS_STG",
#    dag=D_ODS_CUS,
#    execution_delta=None,  # Same day as today
)

my_taskid = "D_STG_INITxSYS_STS_STGxD_SDM_CUS"
D_STG_INITxSYS_STS_STGxD_SDM_CUS= ExternalTaskSensor(
#    schedule_interval=None,
    task_id=my_taskid,
    external_dag_id="D_STG_INIT",
    external_task_id="SYS_STS_STG",
#    dag=D_SDM_CUS,
#    execution_delta=None,  # Same day as today
)

my_taskid = "D_STG_INITxSYS_STS_STGxD_ODS_PRD"
D_STG_INITxSYS_STS_STGxD_ODS_PRD= ExternalTaskSensor(
#    schedule_interval=None,
    task_id=my_taskid,
    external_dag_id="D_STG_INIT",
    external_task_id="SYS_STS_STG",
#    dag=D_ODS_PRD,
#    execution_delta=None,  # Same day as today
)
sqlg_jobs_CUS.ODS_UP_consign_vendor_Prod_map_WH.dag=D_ODS_PRD
D_STG_INITxSYS_STS_STGxD_ODS_PRD.set_downstream(sqlg_jobs_CUS.ODS_UP_consign_vendor_Prod_map_WH)

sqlg_jobs_CUS.ODS_UP_consign_vendor_Prod_map_CPD.dag=D_ODS_PRD
sqlg_jobs_CUS.ODS_UP_consign_vendor_Prod_map_WH.set_downstream(sqlg_jobs_CUS.ODS_UP_consign_vendor_Prod_map_CPD)

sqlg_jobs_CUS.UP_consign_vendor_Prod_map_STG.dag=D_ODS_PRD
sqlg_jobs_CUS.ODS_UP_consign_vendor_Prod_map_CPD.set_downstream(sqlg_jobs_CUS.UP_consign_vendor_Prod_map_STG)

sqlg_jobs_CUS.ODS_UP_consign_vendor_Prod_map_LD.dag=D_ODS_PRD
sqlg_jobs_CUS.UP_consign_vendor_Prod_map_STG.set_downstream(sqlg_jobs_CUS.ODS_UP_consign_vendor_Prod_map_LD)

sqlg_jobs_CUS.UP_consign_vendor_Prod_map.dag=D_ODS_PRD
sqlg_jobs_CUS.ODS_UP_consign_vendor_Prod_map_LD.set_downstream(sqlg_jobs_CUS.UP_consign_vendor_Prod_map)

sqlg_jobs_CUS.ODS_UP_Expense_Budget_Prod_map_WH.dag=D_ODS_PRD
D_STG_INITxSYS_STS_STGxD_ODS_PRD.set_downstream(sqlg_jobs_CUS.ODS_UP_Expense_Budget_Prod_map_WH)

sqlg_jobs_CUS.ODS_UP_Expense_Budget_Prod_map_CPD.dag=D_ODS_PRD
sqlg_jobs_CUS.ODS_UP_Expense_Budget_Prod_map_WH.set_downstream(sqlg_jobs_CUS.ODS_UP_Expense_Budget_Prod_map_CPD)

sqlg_jobs_CUS.UP_Expense_Budget_Prod_map_STG.dag=D_ODS_PRD
sqlg_jobs_CUS.ODS_UP_Expense_Budget_Prod_map_CPD.set_downstream(sqlg_jobs_CUS.UP_Expense_Budget_Prod_map_STG)

sqlg_jobs_CUS.ODS_UP_Expense_Budget_Prod_map_LD.dag=D_ODS_PRD
sqlg_jobs_CUS.UP_Expense_Budget_Prod_map_STG.set_downstream(sqlg_jobs_CUS.ODS_UP_Expense_Budget_Prod_map_LD)

sqlg_jobs_CUS.UP_Expense_Budget_Prod_map.dag=D_ODS_PRD
sqlg_jobs_CUS.ODS_UP_Expense_Budget_Prod_map_LD.set_downstream(sqlg_jobs_CUS.UP_Expense_Budget_Prod_map)

