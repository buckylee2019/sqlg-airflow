
# -*- coding: utf-8 -*-
# Author        : Jesse Wei
# LastUpdate    : 2018/08/04
# Impact        : Jobs generated by SQLG
# Message       : Humanity towards others, we live by sharing. Fear can hold you prisoner, only hope can set you free.

# from __future__ import print_function
import logging
import airflow
from datetime import datetime, timedelta
from airflow.operators.sensors import ExternalTaskSensor
from airflow.operators.python_operator import PythonOperator
from airflow import models
from airflow.models import Variable

from acme.operators.dwh_operators import PostgresOperatorWithTemplatedParams


# DB_NAME = 'DWH'

my_taskid = "HZ_CUST_ACCOUNTS"
HZ_CUST_ACCOUNTS = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "HZ_PARTIES"
HZ_PARTIES = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_CONTINENT_V"
DIM_CONTINENT_V = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_ERPODP_TO_FODP_V"
DIM_ERPODP_TO_FODP_V = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_PLANT"
DIM_PLANT = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_FIG"
DIM_FIG = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "HR_OPERATING_UNITS_V"
HR_OPERATING_UNITS_V = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "IS_ELEMENT_DEF_T"
IS_ELEMENT_DEF_T = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "MFG_REVENUE_V"
MFG_REVENUE_V = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "POWERBI_SM_CON_DETAIL_V"
POWERBI_SM_CON_DETAIL_V = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SM_PURE_DETAIL_V"
SM_PURE_DETAIL_V = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SM_REVENUE_V"
SM_REVENUE_V = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "GL_DAILY_RATES_V"
GL_DAILY_RATES_V = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SCD_FODP"
SCD_FODP = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "IS_ELEMENT_ADJUST"
IS_ELEMENT_ADJUST = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "TB_DETAIL"
TB_DETAIL = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "IS_OPEX_FINAL_V"
IS_OPEX_FINAL_V = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "HR_DEGREEMSF"
HR_DEGREEMSF = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "HR_ETSMSF"
HR_ETSMSF = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "HR_JOBRANK"
HR_JOBRANK = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "HR_PEOMSF"
HR_PEOMSF = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "HR_PLACEMSF"
HR_PLACEMSF = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "HR_TYPMSF"
HR_TYPMSF = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "MV_HR_EMPMSF"
MV_HR_EMPMSF = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "MV_HR_EMPMSF_CN"
MV_HR_EMPMSF_CN = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "MV_HR_EMPMSF_VN"
MV_HR_EMPMSF_VN = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "HR_DEPMSF"
HR_DEPMSF = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "HR_DEPMSF_CN"
HR_DEPMSF_CN = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "HR_DEPMSF_VN"
HR_DEPMSF_VN = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "PEOMSF2"
PEOMSF2 = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "HR_BTYPMSF"
HR_BTYPMSF = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "HR_XXCONTRACT_NQJ"
HR_XXCONTRACT_NQJ = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "MTL_SYSTEM_ITEMS_B"
MTL_SYSTEM_ITEMS_B = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "FND_COLUMNS"
FND_COLUMNS = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "FND_LOOKUP_TYPES"
FND_LOOKUP_TYPES = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "FND_LOOKUP_VALUES"
FND_LOOKUP_VALUES = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "FND_TABLES"
FND_TABLES = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "MTL_CATEGORIES_B"
MTL_CATEGORIES_B = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "MTL_CATEGORY_SETS_B"
MTL_CATEGORY_SETS_B = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "MTL_CUSTOMER_ITEMS"
MTL_CUSTOMER_ITEMS = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "MTL_ITEM_CATALOG_GROUPS_B"
MTL_ITEM_CATALOG_GROUPS_B = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "MTL_ITEM_CATEGORIES"
MTL_ITEM_CATEGORIES = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "MTL_ITEM_STATUS_TL"
MTL_ITEM_STATUS_TL = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "MV_PROJECT_ACTIVITY"
MV_PROJECT_ACTIVITY = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "MV_XXPLM_CFDMETADATA"
MV_XXPLM_CFDMETADATA = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "MV_XXPLM_EC"
MV_XXPLM_EC = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "PRJ_WORKTIMEDATA"
PRJ_WORKTIMEDATA = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "XXPLM_MODEL"
XXPLM_MODEL = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "XXPLM_PROJECT"
XXPLM_PROJECT = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "XXPLM_TFD"
XXPLM_TFD = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "Z_CDOCUMENT_CHECKING_RULE"
Z_CDOCUMENT_CHECKING_RULE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "MV_XXPLM_MODEL_CHECKRULE_V"
MV_XXPLM_MODEL_CHECKRULE_V = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "XXPLM_EC_CHANGE_TYPE"
XXPLM_EC_CHANGE_TYPE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "NSP_REQ_HEADERS"
NSP_REQ_HEADERS = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "NSP_REQ_LINES"
NSP_REQ_LINES = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "PCS_HEADER"
PCS_HEADER = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "PCS_LINEEE"
PCS_LINEEE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "BTMS_EXPENSEPROJECT"
BTMS_EXPENSEPROJECT = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "HISTORYCARD"
HISTORYCARD = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "PN_SPC"
PN_SPC = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SUB_SPC"
SUB_SPC = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "RWK_GLOBAL_LOT_WS1"
RWK_GLOBAL_LOT_WS1 = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "RWK_GLOBAL_LOT_DETAIL_WS1"
RWK_GLOBAL_LOT_DETAIL_WS1 = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "INSTRUMENT_CORRECT_NQJ"
INSTRUMENT_CORRECT_NQJ = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "INSTRUMENT_INFO_CORRECT_NQJ"
INSTRUMENT_INFO_CORRECT_NQJ = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "MV_MTL_CROSS_REFERENCES_V"
MV_MTL_CROSS_REFERENCES_V = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "XX_ERP_ITEM"
XX_ERP_ITEM = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "ERPIQC"
ERPIQC = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "ERFORM_DOC_MSG_WS1"
ERFORM_DOC_MSG_WS1 = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "EF_QCEXCEPTION_MST_WS1"
EF_QCEXCEPTION_MST_WS1 = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "PN_MODULE"
PN_MODULE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "PN_MODULE_MAINTAIN"
PN_MODULE_MAINTAIN = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SPC_ABNORMAL"
SPC_ABNORMAL = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "COPQ_FCTACTUALCOST"
COPQ_FCTACTUALCOST = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "MTL_MATERIAL_TRANSACTIONS"
MTL_MATERIAL_TRANSACTIONS = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "COPQ_DIMCATEGORY"
COPQ_DIMCATEGORY = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "BI_DIMMULTIORG"
BI_DIMMULTIORG = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "MV_ORG_ORGANIZATION_DEF"
MV_ORG_ORGANIZATION_DEF = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "ERDRLRR_INSPECTION_HEADER_WS1"
ERDRLRR_INSPECTION_HEADER_WS1 = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "MV_GL_SETS_OF_BOOKS"
MV_GL_SETS_OF_BOOKS = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "MV_WSH_DELIVERABLES_V"
MV_WSH_DELIVERABLES_V = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "QKB_ITEM"
QKB_ITEM = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "ERDRLRR_INSPECTION_STATUS_WS1"
ERDRLRR_INSPECTION_STATUS_WS1 = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "ERDRLRR_INSPECTION_DETAIL_WS1"
ERDRLRR_INSPECTION_DETAIL_WS1 = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "ERDRLRR_INSPECTION_RESULT_WS1"
ERDRLRR_INSPECTION_RESULT_WS1 = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "PLANT"
PLANT = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SAP_MATERIALMASTER"
SAP_MATERIALMASTER = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "MATERIALGROUP"
MATERIALGROUP = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "CONTROLTABLE"
CONTROLTABLE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "EMS_LOOKUPVALUE_NQJ"
EMS_LOOKUPVALUE_NQJ = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "WO_NQJ"
WO_NQJ = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SPN_TABL_NQJ"
SPN_TABL_NQJ = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "RESULTTYPE"
RESULTTYPE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "MV_PDE_EXCEPTION_HEADER_V_WS1"
MV_PDE_EXCEPTION_HEADER_V_WS1 = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "MV_PDE_EXCEPTION_EQUIP_V_WS1"
MV_PDE_EXCEPTION_EQUIP_V_WS1 = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "MV_PDE_EXCEPTION_DETAIL_V_WS1"
MV_PDE_EXCEPTION_DETAIL_V_WS1 = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "PDE_USER_WS1"
PDE_USER_WS1 = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "QCE_REASON_CODE_WS1"
QCE_REASON_CODE_WS1 = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "EMS_MANUFACTURER_WS1"
EMS_MANUFACTURER_WS1 = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "MODELTYPE"
MODELTYPE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "EFLOW_ATLO_SCAR_CN"
EFLOW_ATLO_SCAR_CN = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "ATLO_QUESTION_NQJ"
ATLO_QUESTION_NQJ = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_CUSTOMER"
SDM_CUSTOMER = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "REF_RFQ_STAGE"
REF_RFQ_STAGE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "REF_PIPELINE_STATUS"
REF_PIPELINE_STATUS = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "REF_PIPELINE_RESULT"
REF_PIPELINE_RESULT = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "REF_PROGRESSION_STATUS"
REF_PROGRESSION_STATUS = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "REF_BMC"
REF_BMC = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_REVENUE_HIT_RATE"
SDM_REVENUE_HIT_RATE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_LEGAL_ENTITY"
SDM_LEGAL_ENTITY = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_BUSINESS_UNIT"
SDM_BUSINESS_UNIT = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_COUNTRY"
SDM_COUNTRY = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_MANUFACTURING_PLANT"
SDM_MANUFACTURING_PLANT = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_REVENUE_CATEGORY"
SDM_REVENUE_CATEGORY = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_CONVERSION_RATE"
SDM_CONVERSION_RATE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_BUDGET"
SDM_BUDGET = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_REALIZED_REVENUE"
SDM_REALIZED_REVENUE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_MANUFACTURING_REVENUE"
SDM_MANUFACTURING_REVENUE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_ADDED_VALUE_RATE"
SDM_ADDED_VALUE_RATE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_PERSONNEL_CATEGORY"
SDM_PERSONNEL_CATEGORY = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_SENIORITY_AT_WNC"
SDM_SENIORITY_AT_WNC = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_JOB_GRADE"
SDM_JOB_GRADE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_JOB_FAMILY"
SDM_JOB_FAMILY = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_JOB_CATEGORY"
SDM_JOB_CATEGORY = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_WORK_PLACE"
SDM_WORK_PLACE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_WORK_LOCATION"
SDM_WORK_LOCATION = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_CAUSE_OF_RESIGNING"
SDM_CAUSE_OF_RESIGNING = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_EDUCATION"
SDM_EDUCATION = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_DEPARTMENT"
SDM_DEPARTMENT = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_EMPLOYMENT_TYPE"
SDM_EMPLOYMENT_TYPE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_EMPLOYEE"
SDM_EMPLOYEE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_EMPLOYEE_H"
SDM_EMPLOYEE_H = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_HEADCOUNT_BUDGET"
SDM_HEADCOUNT_BUDGET = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_TEMPLATE_PRD"
SDM_TEMPLATE_PRD = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_PLM_CATEGORY"
SDM_PLM_CATEGORY = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_ITEM"
SDM_ITEM = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_ECN_REASON"
SDM_ECN_REASON = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_XXPLM_EC"
SDM_XXPLM_EC = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_ECN_CASE_AFTER_MP"
SDM_ECN_CASE_AFTER_MP = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_CDOC_COMPLETION_RATE"
SDM_CDOC_COMPLETION_RATE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_UPLOAD_CDOC_COUNT"
SDM_UPLOAD_CDOC_COUNT = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_TOTAL_CDOC_COUNT"
SDM_TOTAL_CDOC_COUNT = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_PROJECT_CODE"
SDM_PROJECT_CODE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_TOOLING_TOTAL_EXPENSE"
SDM_TOOLING_TOTAL_EXPENSE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_DMST_AND_INTL_TRAVEL_EXP"
SDM_DMST_AND_INTL_TRAVEL_EXP = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_TESTING_EXPENSE"
SDM_TESTING_EXPENSE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_CTF_EXPENSE"
SDM_CTF_EXPENSE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_EQT_EXPENSE"
SDM_EQT_EXPENSE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_EPR_MFG_SAMPLE_BUILD_EXP"
SDM_EPR_MFG_SAMPLE_BUILD_EXP = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_CDOC_PLANNED_DEV_TIME"
SDM_CDOC_PLANNED_DEV_TIME = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_PROD_DEV_MLST_DELAY_RATE"
SDM_PROD_DEV_MLST_DELAY_RATE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_CDOC_DELAY_TIME"
SDM_CDOC_DELAY_TIME = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_MATERIAL_CATEGORY_QA"
SDM_MATERIAL_CATEGORY_QA = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_PRODUCT_TYPE"
SDM_PRODUCT_TYPE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_MODULE_TYPE"
SDM_MODULE_TYPE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_PRODUCT_DEVELOPMENT_TYPE"
SDM_PRODUCT_DEVELOPMENT_TYPE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_MATERIAL_DEFECT_MODE"
SDM_MATERIAL_DEFECT_MODE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_CATEGORY"
SDM_CATEGORY = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_QA_RESULT"
SDM_QA_RESULT = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_C_FLOW_DEVELOPMENT_STAGE"
SDM_C_FLOW_DEVELOPMENT_STAGE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_C_FLOW_DEVELOPMENT_DERI"
SDM_C_FLOW_DEVELOPMENT_DERI = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_CONTROL_STATION"
SDM_CONTROL_STATION = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_CONTROL_THE_PROJECT"
SDM_CONTROL_THE_PROJECT = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_TURN_AROUND_TIME"
SDM_TURN_AROUND_TIME = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_RMA_CASE_STATUS"
SDM_RMA_CASE_STATUS = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_PERSON_IN_CHARGE"
SDM_PERSON_IN_CHARGE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_CLOSED_DAY_8D"
SDM_CLOSED_DAY_8D = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_TIER1"
SDM_TIER1 = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_SHIPPING_DATE"
SDM_SHIPPING_DATE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_RETURN_SOURCE"
SDM_RETURN_SOURCE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_WARRANTY_STATUS"
SDM_WARRANTY_STATUS = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_INVENTORY_OWNER"
SDM_INVENTORY_OWNER = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_MANUFACTURER"
SDM_MANUFACTURER = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_CAVITY_NO"
SDM_CAVITY_NO = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_CASE_CLOSE_STATUS"
SDM_CASE_CLOSE_STATUS = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_STATION"
SDM_STATION = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_MO_NO"
SDM_MO_NO = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_MO_START_MONTH"
SDM_MO_START_MONTH = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_MO_PART_TYPE"
SDM_MO_PART_TYPE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_MP_APPROVE_DATE"
SDM_MP_APPROVE_DATE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_SR_NUMBER"
SDM_SR_NUMBER = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_ATLO_FOR_MP"
SDM_ATLO_FOR_MP = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_MP_FLAG"
SDM_MP_FLAG = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_PM"
SDM_PM = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_CSD_REASON_PAY"
SDM_CSD_REASON_PAY = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_CSD_MATERIAL_SCRAP_COS"
SDM_CSD_MATERIAL_SCRAP_COS = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_CSD_CUSTOMER_PAID_SERV"
SDM_CSD_CUSTOMER_PAID_SERV = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_IQC_DAILY_INPUT_MANP_A"
SDM_IQC_DAILY_INPUT_MANP_A = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_IQC_DAILY_INPUT_MANP"
SDM_IQC_DAILY_INPUT_MANP = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_IQC_DAILY_TOTAL_INSP"
SDM_IQC_DAILY_TOTAL_INSP = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_IQC_AVERAGE_INSPECTION"
SDM_IQC_AVERAGE_INSPECTION = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_INCOMING_MATERIAL_REJECT_LOTS"
SDM_INCOMING_MATERIAL_REJECT_LOTS = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_SUPPLIER_MATERIAL_PRODUC"
SDM_SUPPLIER_MATERIAL_PRODUC = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_CUSTOMER_INSPECTION"
SDM_CUSTOMER_INSPECTION = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_CUSTOMER_COMPLAIN_CASES"
SDM_CUSTOMER_COMPLAIN_CASES = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_IN_PROCESS_QUALITY_CONTROL"
SDM_IN_PROCESS_QUALITY_CONTROL = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_QUALITY_ALERT_CASES"
SDM_QUALITY_ALERT_CASES = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_EQUIPMENT_ANOMALY_CASE"
SDM_EQUIPMENT_ANOMALY_CASE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_FIXTURE_ANOMALY_CASES"
SDM_FIXTURE_ANOMALY_CASES = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_EQUIPMENT_FIXTURE_ANOM"
SDM_EQUIPMENT_FIXTURE_ANOM = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_FAULT_INJECTION_DR"
SDM_FAULT_INJECTION_DR = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_Q_SCAN_DEFECT_RATE_DR"
SDM_Q_SCAN_DEFECT_RATE_DR = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_FINAL_QUALITY_INSPECTI"
SDM_FINAL_QUALITY_INSPECTI = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_FQC_LRR"
SDM_FQC_LRR = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_QUALITY_HOLD_CASES"
SDM_QUALITY_HOLD_CASES = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_CLOSE_WITHIN_SIPULATED"
SDM_CLOSE_WITHIN_SIPULATED = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_CUSTOMER_COMPLAIN_FOR"
SDM_CUSTOMER_COMPLAIN_FOR = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_ON_TIME_CLOSE_RATIO_FOR_WN"
SDM_ON_TIME_CLOSE_RATIO_FOR_WN = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_CLOSE_WITHIN_14_DAYS_FO"
SDM_CLOSE_WITHIN_14_DAYS_FO = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_CUSTOMER_COMPLAIN_FOR_S"
SDM_CUSTOMER_COMPLAIN_FOR_S = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_CLOSE_WITHIN_14_DAYS_RATIO"
SDM_CLOSE_WITHIN_14_DAYS_RATIO = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_FIELD_DEFECT_QUANTITY"
SDM_FIELD_DEFECT_QUANTITY = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_FIELD_DEFECT_QUANTITY"
SDM_FIELD_DEFECT_QUANTITY = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_ON_SITE_REWORK_QUANTITY"
SDM_ON_SITE_REWORK_QUANTITY = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_IN_WARRANTY_RETURN_QUANTITY"
SDM_IN_WARRANTY_RETURN_QUANTITY = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_QUALITY_REJECT_QUANTITY"
SDM_QUALITY_REJECT_QUANTITY = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_MODELS_WITH_MO_RECORDS"
SDM_MODELS_WITH_MO_RECORDS = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_CSD_PLANNED_SHIPPING"
SDM_CSD_PLANNED_SHIPPING = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_ACTUAL_CALIBRATION"
SDM_ACTUAL_CALIBRATION = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_PLANNED_CALIBRATION"
SDM_PLANNED_CALIBRATION = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_CALIBRATION_COMPLETED_RATE"
SDM_CALIBRATION_COMPLETED_RATE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "SDM_TICKET_TYPE"
SDM_TICKET_TYPE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_BUSINESS_GROUP"
DIM_BUSINESS_GROUP = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_BUSINESS_UNIT"
DIM_BUSINESS_UNIT = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_SUB_BUSINESS_UNIT"
DIM_SUB_BUSINESS_UNIT = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_REPORT_CURRENCY"
DIM_REPORT_CURRENCY = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "FCT_BUDGET_HIT_RATE"
FCT_BUDGET_HIT_RATE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "FCT_REALIZED_REVENUE"
FCT_REALIZED_REVENUE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "FCT_MANUFACTURING_REVENUE"
FCT_MANUFACTURING_REVENUE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "FCT_HEADCOUNT_FULFILL_RATE"
FCT_HEADCOUNT_FULFILL_RATE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "FCT_PROD_DEV_MLST_DELAY_RATE"
FCT_PROD_DEV_MLST_DELAY_RATE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "FCT_ECN_CASE_AFTER_MP"
FCT_ECN_CASE_AFTER_MP = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "FCT_TOOLING_TOTAL_EXPENSE"
FCT_TOOLING_TOTAL_EXPENSE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "FCT_TESTING_EXPENSE"
FCT_TESTING_EXPENSE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_ITEM"
DIM_ITEM = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_PLM_CATEGORY"
DIM_PLM_CATEGORY = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_ECN_REASON"
DIM_ECN_REASON = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_PROJECT_CODE"
DIM_PROJECT_CODE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_MATERIAL_CATEGORY_QA"
DIM_MATERIAL_CATEGORY_QA = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_PRODUCT_TYPE"
DIM_PRODUCT_TYPE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_MODULE_TYPE"
DIM_MODULE_TYPE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_PRODUCT_DEVELOPMENT_TYPE"
DIM_PRODUCT_DEVELOPMENT_TYPE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_MATERIAL_DEFECT_MODE"
DIM_MATERIAL_DEFECT_MODE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_CATEGORY"
DIM_CATEGORY = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_QA_RESULT"
DIM_QA_RESULT = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_CONTROL_STATION"
DIM_CONTROL_STATION = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_CONTROL_THE_PROJECT"
DIM_CONTROL_THE_PROJECT = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_TURN_AROUND_TIME"
DIM_TURN_AROUND_TIME = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_RMA_CASE_STATUS"
DIM_RMA_CASE_STATUS = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_PERSON_IN_CHARGE"
DIM_PERSON_IN_CHARGE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_CLOSED_DAY_8D"
DIM_CLOSED_DAY_8D = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_TIER1"
DIM_TIER1 = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_SHIPPING_DATE"
DIM_SHIPPING_DATE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_WARRANTY_STATUS"
DIM_WARRANTY_STATUS = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_INVENTORY_OWNER"
DIM_INVENTORY_OWNER = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_CAVITY_NO"
DIM_CAVITY_NO = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_CASE_CLOSE_STATUS"
DIM_CASE_CLOSE_STATUS = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_STATION"
DIM_STATION = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_C_FLOW_DEVELOPMENT_STAGE"
DIM_C_FLOW_DEVELOPMENT_STAGE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_C_FLOW_DEVELOPMENT_DERI"
DIM_C_FLOW_DEVELOPMENT_DERI = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_ATLO_FOR_MP"
DIM_ATLO_FOR_MP = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_MP_FLAG"
DIM_MP_FLAG = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_PM"
DIM_PM = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_MO_NO"
DIM_MO_NO = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_MO_START_MONTH"
DIM_MO_START_MONTH = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_MP_APPROVE_DATE"
DIM_MP_APPROVE_DATE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "DIM_SR_NUMBER"
DIM_SR_NUMBER = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "FCT_CSD_MATERIAL_SCRAP_COS"
FCT_CSD_MATERIAL_SCRAP_COS = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "FCT_CSD_CUSTOMER_PAID_SERV"
FCT_CSD_CUSTOMER_PAID_SERV = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "FCT_IQC_DAILY_INPUT_MANP"
FCT_IQC_DAILY_INPUT_MANP = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "FCT_IQC_DAILY_TOTAL_INSP"
FCT_IQC_DAILY_TOTAL_INSP = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "FCT_IQC_AVERAGE_INSPECTION"
FCT_IQC_AVERAGE_INSPECTION = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "FCT_SUPPLIER_MATERIAL_PRODUC"
FCT_SUPPLIER_MATERIAL_PRODUC = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "FCT_FAULT_INJECTION_DR"
FCT_FAULT_INJECTION_DR = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "FCT_Q_SCAN_DEFECT_RATE_DR"
FCT_Q_SCAN_DEFECT_RATE_DR = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


my_taskid = "FCT_QUALITY_HOLD_CASES"
FCT_QUALITY_HOLD_CASES = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
#    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    sql=my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(1),
    pool='postgres_dwh')


